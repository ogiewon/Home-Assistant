blueprint:
  name: BP - Pico Config
  description: "This is for the 2 button picos that have the following model:\n\n\
    \ PJ2-2B-GXX-X01 (Pico2Button)\n\nSelect an action for each button\
    \ listed below. "
  domain: automation
  input:
    pico_remote:
      name: Pico Remote
      description: 'Select the pico remote to configure:'
      selector:
        device:
          integration: lutron_caseta
          model: PJ2-2B-GXX-X01 (Pico2Button)
    top_on:
      name: Top (On) Button Pressed
      description: Execute when TOP button is PRESSED
      default: []
      selector:
        action: {}
    top_on_release:
      name: Top (On) Button Released
      description: Execute when TOP button is RELEASED
      default: []
      selector:
        action: {}
    bottom_off:
      name: Bottom (Off) Button Pressed
      description: Execute when BOTTOM button is PRESSED
      default: []
      selector:
        action: {}
    bottom_off_release:
      name: Bottom (Off) Button Released
      description: Execute when BOTTOM button is RELEASED
      default: []
      selector:
        action: {}
  source_url: 
trigger:
- platform: device
  device_id: !input 'pico_remote'
  domain: lutron_caseta
  type: press
  subtype: 'on'
- platform: device
  device_id: !input 'pico_remote'
  domain: lutron_caseta
  type: press
  subtype: 'off'
- platform: device
  device_id: !input 'pico_remote'
  domain: lutron_caseta
  type: release
  subtype: 'on'
- platform: device
  device_id: !input 'pico_remote'
  domain: lutron_caseta
  type: release
  subtype: 'off'
condition: []
action:
- choose:
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.action == "press" and trigger.event.data.button_number
        == 2 }}'
    sequence: !input 'top_on'
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.action == "press" and trigger.event.data.button_number
        == 4 }}'
    sequence: !input 'bottom_off'
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.action == "release" and trigger.event.data.button_number
        == 2 }}'
    sequence: !input 'top_on_release'
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.action == "release" and trigger.event.data.button_number
        == 4 }}'
    sequence: !input 'bottom_off_release'
  default: []
mode: restart
